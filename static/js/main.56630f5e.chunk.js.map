{"version":3,"sources":["commons/utils.js","services/api.js","users/actions/index.js","commons/components/AppBar.js","commons/components/App.js","commons/components/MainActionButton.js","commons/components/HomePage.js","commons/components/FormContainer.js","users/components/NewUserForm.js","users/components/UsersManagementPage.js","rooms/actions/index.js","events/actions/index.js","rooms/components/RoomsList.js","events/components/EventsManagementPage.js","rooms/components/RoomsManagementPage.js","events/components/NewEventForm.js","events/components/Calendar.js","rooms/components/RoomPage.js","users/components/LoginPage.js","serviceWorker.js","users/reducers/reducer.js","rooms/reducers/reducer.js","events/reducers/reducer.js","store.js","index.js"],"names":["getWeekId","momentElement","moment","concat","week","year","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","api","username","password","ref","set","once","then","snapshot","val","event","eventDateMoment","date","weekKey","dayName","format","id","roomId","push","eventId","remove","getAllUsers","dispatch","type","data","payload","setCurrentUser","BookARoomAppBar","_this$props","this","props","goToRoot","currentUser","logout","react_default","a","createElement","AppBar","position","Toolbar","Typography","variant","className","onClick","Icon","Button","color","Component","App","goToCorrectLocation","_this","router","getCurrentLocation","pathname","replace","_this$props2","children","AppBar_BookARoomAppBar","mapDispatchToProps","connect","store","usersData","MainActionButton","_ref","text","iconName","HomePage","createGoToCallback","path","commons_components_MainActionButton","FormContainer","title","buttons","errorMessage","map","button","index","key","name","isPrimary","NewUserForm","state","clearFields","setState","createNewUser","_this$state","createOnChangeCallback","fieldName","e","Object","defineProperty","target","value","_this$state2","FormContainer_FormContainer","TextField","label","onChange","UsersManagementPage","isLoading","users","NewUserForm_NewUserForm","keys","userId","_users$userId","style","border","borderBottom","getAllRooms","getAllEventsOfCurrentWeekByRoomId","RoomsList","rooms","createHandleRoomClickCallback","selectedRoomId","room","isSelected","RoomsList_RoomItem","RoomItem","EventsManagementPage","RoomsList_RoomsList","roomsData","RoomsManagementPage","NewEventForm","newEvent","formButtons","width","startTime","InputLabelProps","shrink","endTime","FormControl","InputLabel","Select","ownerId","placeholder","MenuItem","Calendar","getCurrentWeekDates","weekStart","clone","startOf","days","i","add","createRemoveEventCallback","removeEvent","_this2","createHandleAddNewEventClickCallback","weekEvents","createEditEventCallback","dayMoment","isToday","diff","dayEvents","sort","aId","bId","objectSpread","fontSize","defaultNewEvent","toISOString","RoomPage","isNewEventDialogOpen","handleAddNewEventClick","openNewEventDialog","closeNewEventDialog","handleCreateNewEvent","createNewEvent","params","events","dayOfNewEvent","existingEventsOnSameDay","get","conflictEvent","getEventIdOfConflictWithNewEvent","find","_this$props3","events_components_Calendar","Dialog","open","components_NewEventForm","eventsData","LoginPage","login","Boolean","window","location","hostname","match","defaultState","rootReducer","combineReducers","arguments","length","undefined","createStore","applyMiddleware","thunk","ReactDOM","render","es","react_router_es","history","hashHistory","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.56630f5e.chunk.js","sourcesContent":["import moment from 'moment'\n\nexport const getWeekId = (momentElement) => {\n  if (!momentElement) {\n    momentElement = moment()\n  }\n\n  return `${momentElement.week()}-${momentElement.year()}`\n}\n","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport moment from 'moment'\nimport {getWeekId} from '../commons/utils'\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyB0_26MZw1yEudBgCI0JF934KqLXr-s7mw\",\n  authDomain: \"bookaroom-31e95.firebaseapp.com\",\n  databaseURL: \"https://bookaroom-31e95.firebaseio.com\",\n  projectId: \"bookaroom-31e95\",\n  storageBucket: \"bookaroom-31e95.appspot.com\",\n  messagingSenderId: \"313149581475\",\n  appId: \"1:313149581475:web:2ec92aca0ceec929\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst database = firebase.database()\n\nexport default {\n  createNewUser: (username, password) => {\n    return database.ref(`users/${username}`).set({username, password})\n  },\n  getAllUsers: () => {\n    return database.ref(\"users\").once('value').then(snapshot => snapshot.val())\n  },\n  getAllRooms: () => {\n    return database.ref(\"rooms\").once('value').then(snapshot => snapshot.val())\n  },\n  createNewEvent: (event) => {\n    const eventDateMoment = moment(event.date)\n    const weekKey = getWeekId(eventDateMoment)\n    const dayName = eventDateMoment.format('dddd')\n\n    if (event.id) {\n      return database.ref(`events/${event.roomId}/${weekKey}/${dayName}/${event.id}`).set(event)\n    } else {\n      return database.ref(`events/${event.roomId}/${weekKey}/${dayName}`).push(event)\n    }\n  },\n  getAllEventsOfCurrentWeekByRoomId: (roomId) => {\n    const weekKey = getWeekId()\n\n    return database.ref(`events/${roomId}/${weekKey}`).once('value').then(snapshot => snapshot.val())\n  },\n  removeEvent: (event, eventId) => {\n    const eventDateMoment = moment(event.date)\n    const weekKey = getWeekId(eventDateMoment)\n    const dayName = eventDateMoment.format('dddd')\n\n    return database.ref(`events/${event.roomId}/${weekKey}/${dayName}/${eventId}`).remove()\n  }\n}\n","import api from '../../services/api'\n\nexport const createNewUser = (username, password) => {\n  return (dispatch) => {\n    dispatch({type: 'USERS@CREATE_USER_LOADING'})\n\n    return api.createNewUser(username, password).then(() => {\n      dispatch({type: 'USERS@CREATE_USER_SUCCESS'})\n      return dispatch(getAllUsers())\n    })\n  }\n}\n\nexport const getAllUsers = () => {\n  return (dispatch) => {\n    dispatch({type: 'USERS@GET_ALL_USERS_LOADING'})\n\n    return api.getAllUsers().then((data) => {\n      return dispatch({type: 'USERS@GET_ALL_USERS_SUCCESS', payload: data})\n    })\n  }\n}\n\nexport const setCurrentUser = (username) => {\n  return {type: 'USERS@SET_CURRENT_USER', payload: username}\n}\n","import React, {Component} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\n\nimport './AppBar.css'\n\nexport default class BookARoomAppBar extends Component {\n  render() {\n    const {goToRoot, currentUser, logout} = this.props\n\n    return (\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className=\"app-logo\" onClick={goToRoot}>\n            Book a Room\n          </Typography>\n          {currentUser &&\n            <div className=\"user-contorls-container\">\n              <Icon>account_circle</Icon>\n              <span className=\"button-text\">{`Welcome ${currentUser}`}</span>\n              <Button color=\"inherit\" onClick={logout}>\n                <span className=\"button-text\">Logout</span>\n              </Button>\n            </div>\n          }\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport {setCurrentUser} from '../../users/actions'\n\nimport AppBar from './AppBar'\n\nclass App extends Component {\n  componentDidMount() {\n    this.goToCorrectLocation()\n  }\n\n  componentDidUpdate() {\n    this.goToCorrectLocation()\n  }\n\n  goToCorrectLocation = () => {\n    const {router, currentUser} = this.props\n\n    if (!currentUser && router.getCurrentLocation().pathname !== '/login') {\n      router.replace('/login')\n    } else if (router.getCurrentLocation().pathname === '/') {\n      router.replace('/home')\n    }\n  }\n\n  goToRoot = () => {\n    const {router} = this.props\n\n    router.replace('/')\n  }\n\n  logout = () => {\n    const {setCurrentUser} = this.props\n\n    setCurrentUser('')\n  }\n\n  render() {\n    const {children, currentUser} = this.props\n\n    return (\n      <div>\n        <AppBar goToRoot={this.goToRoot} currentUser={currentUser} logout={this.logout} />\n        {children}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (store) =>{\n  return {\n    currentUser: store.usersData.currentUser\n  }\n}\n\nconst mapDispatchToProps = {setCurrentUser}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import React from 'react';\nimport Icon from '@material-ui/core/Icon';\n\nimport './MainActionButton.css'\n\nconst MainActionButton = ({text, iconName, onClick}) => {\n  return (\n    <div className=\"main-action-button\" onClick={onClick}>\n      <Icon>{iconName}</Icon>\n      <span className=\"button-text\">{text}</span>\n    </div>\n  )\n}\n\nexport default MainActionButton\n","import React, {Component} from 'react';\nimport './HomePage.css';\nimport MainActionButton from './MainActionButton'\n\nexport default class HomePage extends Component {\n  createGoToCallback = (path) => {\n    return () => {\n      const {router} = this.props\n\n      router.replace(path)\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"home-page\">\n        <div className=\"main-actions-container\">\n          <MainActionButton text=\"Manage users\" iconName=\"group\" onClick={this.createGoToCallback('users-management')} />\n          <MainActionButton text=\"Manage Events\" iconName=\"date_range\" onClick={this.createGoToCallback('events-management')}/>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport './FormContainer.css'\n\nexport default class FormContainer extends Component {\n  render() {\n    const {children, title, buttons, errorMessage} = this.props\n\n    return (\n      <div className=\"form-container\">\n        <h4>{title}</h4>\n        {children}\n        {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\n        <div className=\"controls\">\n          {buttons.map((button, index) => {\n            return (\n              <Button\n                key={`${button.name}-${index}`}\n                variant=\"contained\"\n                color={button.isPrimary ? 'primary' : 'default'}\n                onClick={button.onClick}\n              >\n                {button.name}\n              </Button>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport FormContainer from '../../commons/components/FormContainer'\n\nimport './NewUserForm.css'\n\nexport default class NewUserForm extends Component {\n  state = {\n    username: '',\n    password: ''\n  }\n\n  clearFields = () => {\n    this.setState({username: '', password: ''})\n  }\n\n  createNewUser = () => {\n    const {createNewUser} = this.props\n    const {username, password} = this.state\n\n    createNewUser(username, password).then(this.clearFields)\n  }\n\n  createOnChangeCallback = (fieldName) => {\n    return (e) => {\n      this.setState({\n        [fieldName]: e.target.value\n      })\n    }\n  }\n\n  render() {\n    const {username, password} = this.state\n    const buttons = [\n      {name: 'Clear', onClick: this.clearFields},\n      {name: 'Create', onClick: this.createNewUser, isPrimary: true}\n    ]\n\n    return (\n      <FormContainer title=\"Create new user\" buttons={buttons}>\n        <div className=\"new-user-inputs-container\">\n          <TextField\n            id=\"username\"\n            label=\"Username\"\n            value={username}\n            onChange={this.createOnChangeCallback('username')}\n          />\n          <TextField\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={password}\n            onChange={this.createOnChangeCallback('password')}\n          />\n        </div>\n      </FormContainer>\n    )\n  }\n}\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {createNewUser, getAllUsers} from '../actions'\nimport NewUserForm from './NewUserForm'\nimport Icon from '@material-ui/core/Icon'\nimport './UsersManagementPage.css'\n\nclass UsersManagementPage extends Component {\n  componentDidMount() {\n    const {getAllUsers} = this.props\n\n    getAllUsers()\n  }\n\n  render() {\n    const {createNewUser, isLoading, users} = this.props\n\n    return (\n      <div className=\"users-management-container\">\n        <NewUserForm createNewUser={createNewUser} />\n\n        {isLoading && <div>loading...</div>}\n\n        <div className=\"users-list-container\">\n          {Object.keys(users).map(userId => {\n            const {username, password, color} = users[userId]\n            return (\n              <div key={userId} className=\"user-item\" style={{border: `1px solid ${color}`}}>\n                <div className=\"username\" style={{borderBottom: `1px solid ${color}`}}>\n                  <Icon>account_circle</Icon>\n                  <span className=\"label\">{username}</span>\n                </div>\n                <div className=\"password\">\n                  <Icon>vpn_key</Icon>\n                  <span className=\"label\">{password}</span>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (store) => {\n  return {\n    isLoading: store.usersData.isLoading,\n    users: store.usersData.users\n  }\n}\n\nconst mapDispatchToProps = {createNewUser, getAllUsers}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersManagementPage)\n","import api from '../../services/api'\n\nexport const getAllRooms = () => {\n  return (dispatch) => {\n    dispatch({type: 'ROOMS@GET_ALL_ROOMS_LOADING'})\n\n    return api.getAllRooms().then((data) => {\n      return dispatch({type: 'ROOMS@GET_ALL_ROOMS_SUCCESS', payload: data})\n    })\n  }\n}\n","import api from '../../services/api'\n\nexport const createNewEvent = (event) => {\n  return (dispatch) => {\n    dispatch({type: 'EVENTS@CREATE_EVENT_LOADING'})\n\n    return api.createNewEvent(event).then(() => {\n      dispatch({type: 'EVENTS@CREATE_EVENT_SUCCESS'})\n      return dispatch(getAllEventsOfCurrentWeekByRoomId(event.roomId))\n    })\n  }\n}\n\nexport const removeEvent = (event, eventId) => {\n  return (dispatch) => {\n    dispatch({type: 'EVENTS@REMOVE_EVENT_LOADING'})\n\n    return api.removeEvent(event, eventId).then(() => {\n      dispatch({type: 'EVENTS@REMOVE_EVENT_SUCCESS'})\n      return dispatch(getAllEventsOfCurrentWeekByRoomId(event.roomId))\n    })\n  }\n}\n\nexport const getAllEventsOfCurrentWeekByRoomId = (roomId) => {\n  return (dispatch) => {\n    dispatch({type: 'EVENTS@GET_EVENTS_OF_WEEK_BY_ROOM_LOADING'})\n\n    return api.getAllEventsOfCurrentWeekByRoomId(roomId).then((data) => {\n      return dispatch({type: 'EVENTS@GET_EVENTS_OF_WEEK_BY_ROOM_SUCCESS', payload: {\n        data,\n        roomId\n      }})\n    })\n  }\n}\n","import React, {Component} from 'react'\nimport Icon from '@material-ui/core/Icon';\n\nimport './RoomsList.css'\n\nexport default class RoomsList extends Component {\n  render() {\n    const {rooms, isLoading, createHandleRoomClickCallback, selectedRoomId} = this.props\n\n    return (\n      <div className=\"rooms-list-container\">\n        {isLoading && <div>loading...</div>}\n        {Object.keys(rooms).map(roomId => {\n          const room = rooms[roomId]\n          const isSelected = roomId === selectedRoomId\n          return <RoomItem key={roomId} isSelected={isSelected} room={room} onClick={createHandleRoomClickCallback(roomId)} />\n        })}\n      </div>\n    )\n  }\n}\n\nconst RoomItem = ({room, isSelected, onClick}) => {\n  return (\n    <div className={`room-item ${isSelected ? 'selected' : ''}`} onClick={onClick}>\n      <Icon>event_seat</Icon>\n      <span className=\"name\">{room.name}</span>\n    </div>\n  )\n}\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {getAllRooms} from '../../rooms/actions'\nimport {getAllEventsOfCurrentWeekByRoomId} from '../../events/actions'\nimport RoomsList from '../../rooms/components/RoomsList'\nimport './EventsManagementPage.css'\n\nclass EventsManagementPage extends Component {\n  state = {\n    selectedRoomId: ''\n  }\n\n  componentDidMount() {\n    const {getAllRooms} = this.props\n\n    getAllRooms()\n  }\n\n  createHandleRoomClickCallback = (roomId) => {\n    return () => {\n      const {router, getAllEventsOfCurrentWeekByRoomId} = this.props\n\n      this.setState({selectedRoomId: roomId})\n      getAllEventsOfCurrentWeekByRoomId(roomId)\n      router.replace(`/events-management/rooms/${roomId}`)\n    }\n  }\n\n  render() {\n    const {rooms, isLoading, children} = this.props\n    const {selectedRoomId} = this.state\n\n    return (\n      <div className=\"events-management-container\">\n        {!isLoading && <div className=\"title\">Please choose room to book an event:</div>}\n        <RoomsList\n          isLoading={isLoading}\n          selectedRoomId={selectedRoomId}\n          rooms={rooms}\n          createHandleRoomClickCallback={this.createHandleRoomClickCallback}\n        />\n        {children}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (store) => {\n  return {\n    rooms: store.roomsData.rooms,\n    isLoading: store.roomsData.isLoading\n  }\n}\n\nconst mapDispatchToProps = {getAllRooms, getAllEventsOfCurrentWeekByRoomId}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventsManagementPage)\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport RoomsList from './RoomsList'\nimport {getAllRooms} from '../../rooms/actions'\n\nclass RoomsManagementPage extends Component {\n  componentDidMount() {\n    const {getAllRooms} = this.props\n\n    getAllRooms()\n  }\n\n  createHandleRoomClickCallback = (roomId) => {\n    return () => {\n      const {router} = this.props\n\n      router.replace(`/events-management/rooms/${roomId}`)\n    }\n  }\n\n  render() {\n    const {rooms, isLoading} = this.props\n\n    return (\n      <div className=\"rooms-management-container\">\n        <RoomsList isLoading={isLoading} rooms={rooms} createHandleRoomClickCallback={this.createHandleRoomClickCallback} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (store) => {\n  return {\n    rooms: store.roomsData.rooms,\n    isLoading: store.roomsData.isLoading\n  }\n}\n\nconst mapDispatchToProps = {getAllRooms}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoomsManagementPage)\n","import React, {Component} from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormContainer from '../../commons/components/FormContainer'\nimport moment from 'moment'\n\nclass NewEventForm extends Component {\n  render() {\n    const {newEvent, createOnChangeCallback, formButtons, room, users, errorMessage} = this.props\n\n    return (\n      <FormContainer title={`Create new event in room: ${room.name}`} buttons={formButtons} errorMessage={errorMessage}>\n        <div>{`The event is planned for: ${moment(newEvent.date).format(\"MMM Do YY\")}`}</div>\n        <TextField\n          id=\"name\"\n          label=\"Event name\"\n          value={newEvent.name}\n          style={{width: '230px'}}\n          onChange={createOnChangeCallback('name')}\n        />\n        <TextField\n          id=\"startTime\"\n          label=\"Start time\"\n          type=\"time\"\n          value={newEvent.startTime}\n          InputLabelProps={{shrink: true}}\n          style={{width: '230px'}}\n          onChange={createOnChangeCallback('startTime')}\n        />\n        <TextField\n          id=\"endTime\"\n          label=\"End time\"\n          type=\"time\"\n          value={newEvent.endTime}\n          InputLabelProps={{shrink: true}}\n          style={{width: '230px'}}\n          onChange={createOnChangeCallback('endTime')}\n        />\n        <FormControl>\n          <InputLabel>Owner username</InputLabel>\n          <Select\n            value={newEvent.ownerId}\n            style={{width: '230px'}}\n            placeholder=\"Owner username\"\n            onChange={createOnChangeCallback('ownerId')}\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            {Object.keys(users).map(username => {\n              return <MenuItem key={username} value={username}>{username}</MenuItem>\n            })}\n          </Select>\n        </FormControl>\n      </FormContainer>\n    )\n  }\n}\n\nexport default NewEventForm\n","import React, {Component} from 'react'\nimport moment from 'moment'\nimport Icon from '@material-ui/core/Icon'\n\nimport './Calendar.css'\n\nclass Calendar extends Component {\n  getCurrentWeekDates = () => {\n    const currentDate = moment()\n    const weekStart = currentDate.clone().startOf('week')\n\n    const days = []\n    for (let i = 0; i <= 6; i++) {\n      days.push(moment(weekStart).add(i, 'days'))\n    }\n\n    return days\n  }\n\n  createRemoveEventCallback = (event, eventId) => {\n    return () => {\n      const {removeEvent} = this.props\n\n      removeEvent(event, eventId)\n    }\n  }\n\n  render() {\n    const {createHandleAddNewEventClickCallback, weekEvents, createEditEventCallback} = this.props\n\n    return (\n      <div className=\"calendar-container\">\n        {\n          this.getCurrentWeekDates().map(dayMoment => {\n            const dayName = dayMoment.format('dddd');\n            const isToday = moment().diff(dayMoment, 'days') === 0\n            let dayEvents = []\n\n            if (weekEvents && weekEvents[dayName]) {\n              dayEvents = Object.keys(weekEvents[dayName])\n                .sort((aId, bId) => {\n                  return weekEvents[dayName][aId].startTime < weekEvents[dayName][bId].startTime ? -1 : 1\n                })\n                .map(id => ({...weekEvents[dayName][id], id}))\n            }\n\n            return (\n              <div className=\"day\" key={dayName}>\n                <div className={`day-name day-${dayName}`}>\n                  <span>{dayName}</span>\n                  <span className=\"sub-title\">\n                    {isToday ? 'Today' : dayMoment.format('DD/MM')}\n                  </span>\n                </div>\n                <div className=\"day-events-container\">\n                  <div className=\"new-event-button\" onClick={createHandleAddNewEventClickCallback(dayMoment)}>\n                    <Icon>add</Icon>\n                  </div>\n                  {dayEvents.map((event, index) => {\n                    return (\n                      <div key={`${event.name}-${index}`} className=\"event-container\">\n                        <div className=\"event-time\">\n                          <Icon style={{fontSize: '15px'}}>alarm</Icon>\n                          <span className=\"text\">{`${event.startTime} - ${event.endTime}`}</span>\n                        </div>\n                        <div className=\"event-name\">\n                          <Icon style={{fontSize: '15px'}}>date_range</Icon>\n                          <span className=\"text\">{event.name}</span>\n                        </div>\n                        <div className=\"event-owner\">\n                          <Icon style={{fontSize: '15px'}}>account_circle</Icon>\n                          <span className=\"text\">{event.ownerId}</span>\n                        </div>\n                        <div className=\"controls\">\n                          <div className=\"edit-button button\" onClick={createEditEventCallback(event)}>\n                            <Icon style={{fontSize: '15px'}}>edit</Icon>\n                          </div>\n                          <div className=\"remove-button button\" onClick={this.createRemoveEventCallback(event, event.id)}>\n                            <Icon style={{fontSize: '15px'}}>highlight_off</Icon>\n                          </div>\n                        </div>\n                      </div>\n                    )\n                  })}\n                </div>\n              </div>\n            )\n          })\n        }\n      </div>\n    )\n  }\n}\n\nexport default Calendar\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport moment from 'moment'\nimport {get} from 'lodash'\nimport Dialog from '@material-ui/core/Dialog'\nimport {getAllUsers} from '../../users/actions'\nimport {createNewEvent, getAllEventsOfCurrentWeekByRoomId, removeEvent} from '../../events/actions'\nimport NewEventForm from '../../events/components/NewEventForm'\nimport Calendar from '../../events/components/Calendar'\nimport {getWeekId} from '../../commons/utils'\n\nconst defaultNewEvent = {\n  name: '',\n  date: moment().toISOString(),\n  startTime: moment().format('hh:mm'),\n  endTime: moment().format('hh:mm'),\n  ownerId: ''\n}\n\nclass RoomPage extends Component {\n  state = {\n    newEvent: {...defaultNewEvent},\n    errorMessage: '',\n    isNewEventDialogOpen: false\n  }\n\n  componentDidMount() {\n    const {getAllUsers, getAllEventsOfCurrentWeekByRoomId, params} = this.props\n    const roomId = params.id\n\n    getAllUsers()\n    getAllEventsOfCurrentWeekByRoomId(roomId)\n  }\n\n  createOnChangeCallback = (fieldName) => {\n    return (e) => {\n      const {newEvent} = this.state\n\n      this.setState({\n        newEvent: {\n          ...newEvent,\n          [fieldName]: e.target.value\n        }\n      })\n    }\n  }\n\n  createHandleAddNewEventClickCallback = (dayMoment) => {\n    return () => this.handleAddNewEventClick(dayMoment)\n  }\n\n  handleAddNewEventClick = (dayMoment) => {\n    const {newEvent} = this.state\n\n    this.setState({\n      newEvent: {\n        ...newEvent,\n        date: dayMoment.toISOString()\n      }\n    })\n    this.openNewEventDialog()\n  }\n\n  openNewEventDialog = () => {\n    this.setState({isNewEventDialogOpen: true})\n  }\n\n  closeNewEventDialog = () => {\n    this.setState({isNewEventDialogOpen: false, newEvent: {...defaultNewEvent}})\n  }\n\n  createEditEventCallback = (event) => {\n    return () => {\n      this.setState({newEvent: event})\n      this.openNewEventDialog()\n    }\n  }\n\n  handleCreateNewEvent = () => {\n    const {createNewEvent, params, events} = this.props\n    const {newEvent} = this.state\n    const dayOfNewEvent = moment(newEvent.date).format('dddd')\n    const existingEventsOnSameDay = get(events, `${params.id}.${getWeekId()}.${dayOfNewEvent}`, {})\n    const conflictEventId = this.getEventIdOfConflictWithNewEvent(newEvent, existingEventsOnSameDay)\n    const conflictEvent = existingEventsOnSameDay[conflictEventId]\n\n    if (!newEvent.name) {\n      this.setState({errorMessage: 'Please fill event name.'})\n    } else if (!newEvent.ownerId) {\n      this.setState({errorMessage: 'Please select event owner.'})\n    } else if (newEvent.startTime >= newEvent.endTime) {\n      this.setState({errorMessage: 'Event start time must be before end time.'})\n    } else if (conflictEvent) {\n      this.setState({errorMessage: `You can't create an event at the same time with: \"${conflictEvent.name}\" by ${conflictEvent.ownerId}.`})\n    } else {\n      createNewEvent({...newEvent, roomId: params.id}).then(this.closeNewEventDialog)\n      this.setState({newEvent: {...defaultNewEvent}, errorMessage: ''})\n    }\n\n  }\n\n  getEventIdOfConflictWithNewEvent = (newEvent, existingEventsOnSameDay) => {\n    return Object.keys(existingEventsOnSameDay).find(eventId => {\n      const event = existingEventsOnSameDay[eventId]\n\n      return (\n        (event.startTime > newEvent.startTime && newEvent.endTime > event.endTime) ||\n        (event.startTime < newEvent.startTime && newEvent.startTime < event.endTime) ||\n        (event.startTime < newEvent.endTime && newEvent.endTime < event.endTime)\n      )\n    })\n  }\n\n  render() {\n    const {params, rooms, users, events, removeEvent} = this.props\n    const {newEvent, isNewEventDialogOpen, errorMessage} = this.state\n    const {id} = params\n    const room = rooms[id]\n    const formButtons = [\n      {name: 'Cancel', onClick: this.closeNewEventDialog},\n      {name: 'Create', onClick: this.handleCreateNewEvent, isPrimary: true},\n    ]\n\n    if (!room) {\n      return null\n    }\n\n    return (\n      <div>\n        <Calendar\n          createHandleAddNewEventClickCallback={this.createHandleAddNewEventClickCallback}\n          weekEvents={get(events, `${id}.${getWeekId()}`, {})}\n          removeEvent={removeEvent}\n          createEditEventCallback={this.createEditEventCallback}\n        />\n        <Dialog open={isNewEventDialogOpen}>\n          <NewEventForm\n            newEvent={newEvent}\n            createOnChangeCallback={this.createOnChangeCallback}\n            formButtons={formButtons}\n            room={room}\n            users={users}\n            errorMessage={errorMessage}\n          />\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (store) => {\n  return {\n    rooms: store.roomsData.rooms,\n    users: store.usersData.users,\n    events: store.eventsData.events\n  }\n}\n\nconst mapDispatchToProps = {getAllUsers, createNewEvent, getAllEventsOfCurrentWeekByRoomId, removeEvent}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoomPage)\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport {getAllUsers, setCurrentUser} from '../actions'\nimport TextField from '@material-ui/core/TextField'\nimport FormContainer from '../../commons/components/FormContainer'\n\nimport './LoginPage.css'\n\nclass LoginPage extends Component {\n  state = {\n    username: '',\n    password: '',\n    errorMessage: ''\n  }\n\n  componentDidMount() {\n    const {getAllUsers} = this.props\n\n    getAllUsers()\n  }\n\n  createOnChangeCallback = (fieldName) => {\n    return (e) => {\n      this.setState({\n        [fieldName]: e.target.value\n      })\n    }\n  }\n\n  login = () => {\n    const {users, router, setCurrentUser} = this.props\n    const {username, password} = this.state\n    const isCorrectLogin = users[username] && users[username].password === password\n\n    if (isCorrectLogin) {\n      setCurrentUser(username)\n      router.replace('/home')\n    } else {\n      this.setState({errorMessage: 'Wrong username or password'})\n    }\n  }\n\n  render() {\n    const {username, password, errorMessage} = this.state\n    const buttons = [\n      {name: 'Login', onClick: this.login, isPrimary: true}\n    ]\n\n    return (\n      <div className=\"login-page\">\n        <FormContainer\n          title=\"Please login to Book a Room\"\n          buttons={buttons}\n          errorMessage={errorMessage}\n        >\n          <TextField\n            id=\"username\"\n            label=\"Username\"\n            value={username}\n            onChange={this.createOnChangeCallback('username')}\n          />\n          <TextField\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={password}\n            onChange={this.createOnChangeCallback('password')}\n          />\n        </FormContainer>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (store) => {\n  return {\n    users: store.usersData.users\n  }\n}\n\nconst mapDispatchToProps = {getAllUsers, setCurrentUser}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const defaultState = {\n  isLoading: false,\n  users: {},\n  currentUser: ''\n}\n\nexport default (state = defaultState, {type, payload}) => {\n  switch (type) {\n    case 'USERS@CREATE_USER_LOADING': {\n      return {\n        ...state,\n        isLoading: true\n      }\n    }\n\n    case 'USERS@CREATE_USER_SUCCESS': {\n      return {\n        ...state,\n        isLoading: false\n      }\n    }\n\n    case 'USERS@GET_ALL_USERS_LOADING': {\n      return {\n        ...state,\n        isLoading: true\n      }\n    }\n\n    case 'USERS@GET_ALL_USERS_SUCCESS': {\n      return {\n        ...state,\n        isLoading: false,\n        users: payload\n      }\n    }\n\n    case 'USERS@SET_CURRENT_USER': {\n      return {\n        ...state,\n        currentUser: payload\n      }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","const defaultState = {\n  isLoading: false,\n  rooms: {}\n}\n\nexport default (state = defaultState, {type, payload}) => {\n  switch (type) {\n    case 'ROOMS@GET_ALL_ROOMS_LOADING': {\n      return {\n        ...state,\n        isLoading: true\n      }\n    }\n\n    case 'ROOMS@GET_ALL_ROOMS_SUCCESS': {\n      return {\n        ...state,\n        isLoading: false,\n        rooms: payload\n      }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","import {get} from 'lodash'\nimport {getWeekId} from '../../commons/utils'\n\nconst defaultState = {\n  isLoading: false,\n  events: {}\n}\n\nexport default (state = defaultState, {type, payload}) => {\n  switch (type) {\n    case 'EVENTS@CREATE_EVENT_LOADING': {\n      return {\n        ...state,\n        isLoading: true\n      }\n    }\n\n    case 'EVENTS@CREATE_EVENT_SUCCESS': {\n      return {\n        ...state,\n        isLoading: false,\n        events: payload\n      }\n    }\n\n    case 'EVENTS@GET_EVENTS_OF_WEEK_BY_ROOM_LOADING': {\n      return {\n        ...state,\n        isLoading: true\n      }\n    }\n\n    case 'EVENTS@GET_EVENTS_OF_WEEK_BY_ROOM_SUCCESS': {\n      return {\n        ...state,\n        isLoading: false,\n        events: {\n          ...state.events,\n          [payload.roomId]: {\n            ...get(state, `events[${payload.roomId}]`, {}),\n            [getWeekId()]: payload.data\n          }\n        }\n      }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","import {createStore, applyMiddleware, combineReducers} from 'redux'\nimport thunk from 'redux-thunk'\nimport usersReducer from './users/reducers/reducer'\nimport roomsReducer from './rooms/reducers/reducer'\nimport eventsReducer from './events/reducers/reducer'\n\nconst rootReducer = combineReducers({\n  usersData: usersReducer,\n  eventsData: eventsReducer,\n  roomsData: roomsReducer\n})\n\nexport default createStore(rootReducer, applyMiddleware(thunk))\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { Router, Route, hashHistory } from 'react-router'\n\nimport './index.css'\nimport App from './commons/components/App'\nimport HomePage from './commons/components/HomePage'\nimport UsersManagementPage from './users/components/UsersManagementPage'\nimport EventsManagementPage from './events/components/EventsManagementPage'\nimport RoomsManagementPage from './rooms/components/RoomsManagementPage'\nimport RoomPage from './rooms/components/RoomPage'\nimport LoginPage from './users/components/LoginPage'\nimport * as serviceWorker from './serviceWorker'\nimport store from './store.js'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={hashHistory}>\n      <Route path=\"/\" component={App}>\n        <Route path='login' component={LoginPage} />\n        <Route path=\"home\" component={HomePage} />\n        <Route path='users-management' component={UsersManagementPage} />\n        <Route path='rooms-management' component={RoomsManagementPage} />\n        <Route path='events-management' component={EventsManagementPage}>\n          <Route path=\"rooms/:id\" component={RoomPage} />\n        </Route>\n      </Route>\n    </Router>\n  </Provider>,\n  document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}